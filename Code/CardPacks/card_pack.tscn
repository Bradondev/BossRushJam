[gd_scene load_steps=12 format=3 uid="uid://q84h2ixauhlr"]

[ext_resource type="Script" path="res://CardPack.gd" id="1_gmwym"]
[ext_resource type="Texture2D" uid="uid://be80enblifuwo" path="res://Art/Cards/Card_Main_Back.png" id="2_g6hkl"]

[sub_resource type="Shader" id="Shader_crqrk"]
code = "shader_type canvas_item;

uniform vec4 color :source_color = vec4(1.0);
uniform float width : hint_range(0, 10) = 1.0;
uniform int pattern : hint_range(0, 2) = 0; // diamond, circle, square
uniform bool inside = false;
uniform bool add_margins = true; // only useful when inside is false

void vertex() {
	if (add_margins) {
		VERTEX += (UV * 2.0 - 1.0) * width;
	}
}

bool hasContraryNeighbour(vec2 uv, vec2 texture_pixel_size, sampler2D texture) {
	for (float i = -ceil(width); i <= ceil(width); i++) {
		float x = abs(i) > width ? width * sign(i) : i;
		float offset;
		
		if (pattern == 0) {
			offset = width - abs(x);
		} else if (pattern == 1) {
			offset = floor(sqrt(pow(width + 0.5, 2) - x * x));
		} else if (pattern == 2) {
			offset = width;
		}
		
		for (float j = -ceil(offset); j <= ceil(offset); j++) {
			float y = abs(j) > offset ? offset * sign(j) : j;
			vec2 xy = uv + texture_pixel_size * vec2(x, y);
			
			if ((xy != clamp(xy, vec2(0.0), vec2(1.0)) || texture(texture, xy).a == 0.0) == inside) {
				return true;
			}
		}
	}
	
	return false;
}

void fragment() {
	vec2 uv = UV;
	
	if (add_margins) {
		vec2 texture_pixel_size = vec2(1.0) / (vec2(1.0) / TEXTURE_PIXEL_SIZE + vec2(width * 2.0));
		
		uv = (uv - texture_pixel_size * width) * TEXTURE_PIXEL_SIZE / texture_pixel_size;
		
		if (uv != clamp(uv, vec2(0.0), vec2(1.0))) {
			COLOR.a = 0.0;
		} else {
			COLOR = texture(TEXTURE, uv);
		}
	} else {
		COLOR = texture(TEXTURE, uv);
	}
	
	if ((COLOR.a > 0.0) == inside && hasContraryNeighbour(uv, TEXTURE_PIXEL_SIZE, TEXTURE)) {
		COLOR.rgb = inside ? mix(COLOR.rgb, color.rgb, color.a) : color.rgb;
		COLOR.a += (1.0 - COLOR.a) * color.a;
	}
}

"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_fuh03"]
shader = SubResource("Shader_crqrk")
shader_parameter/color = Color(1, 1, 1, 0.976471)
shader_parameter/width = 0.0
shader_parameter/pattern = 0
shader_parameter/inside = false
shader_parameter/add_margins = true

[sub_resource type="Animation" id="Animation_nr5ls"]
resource_name = "FadeOut"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 1),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 0)]
}

[sub_resource type="Animation" id="Animation_aouih"]
resource_name = "OutLineOff"
length = 0.2
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("CardBack:material:shader_parameter/width")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("CardBack:material:shader_parameter/color")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 0.976471)]
}

[sub_resource type="Animation" id="Animation_8kn3i"]
resource_name = "OutlineOn"
length = 0.5
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("CardBack:material:shader_parameter/width")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.4),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [1.0, 2.0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("CardBack:material:shader_parameter/color")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 0.976471)]
}

[sub_resource type="Animation" id="Animation_1tu0b"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("CardBack:material:shader_parameter/color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 0.976471)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("CardBack:material:shader_parameter/width")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}

[sub_resource type="Animation" id="Animation_t70gt"]
resource_name = "GoldHighLights"
length = 0.1
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("CardBack:material:shader_parameter/color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 0.85098, 0, 1)]
}

[sub_resource type="Animation" id="Animation_7lg6s"]
resource_name = "Idle"
length = 3.869
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 1.1, 2.3),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector2(0, -12), Vector2(0, 0), Vector2(0, 12)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_yhpte"]
_data = {
"FadeOut": SubResource("Animation_nr5ls"),
"GoldHighLights": SubResource("Animation_t70gt"),
"Idle": SubResource("Animation_7lg6s"),
"OutLineOff": SubResource("Animation_aouih"),
"OutlineOn": SubResource("Animation_8kn3i"),
"RESET": SubResource("Animation_1tu0b")
}

[node name="CardPack" type="Node2D"]
texture_filter = 1
position = Vector2(0, -12)
script = ExtResource("1_gmwym")

[node name="CardHolder" type="Node2D" parent="."]
position = Vector2(0, -64)
scale = Vector2(0.5, 0.5)
metadata/_edit_group_ = true

[node name="CardBack" type="TextureRect" parent="."]
material = SubResource("ShaderMaterial_fuh03")
offset_left = -71.0
offset_top = -35.0
offset_right = -7.0
offset_bottom = 29.0
scale = Vector2(2.3, 2.3)
texture = ExtResource("2_g6hkl")
stretch_mode = 3

[node name="MouseChecker" type="Control" parent="."]
visible = false
layout_mode = 3
anchors_preset = 0
offset_left = -39.0
offset_top = -56.0
offset_right = 46.0
offset_bottom = 72.0

[node name="PointHolder" type="Node2D" parent="."]
position = Vector2(0, -47)

[node name="DrawPoint" type="Marker2D" parent="PointHolder"]
position = Vector2(0, -172)

[node name="DrawPoint2" type="Marker2D" parent="PointHolder"]
position = Vector2(100, -172)

[node name="DrawPoint3" type="Marker2D" parent="PointHolder"]
position = Vector2(-100, -172)

[node name="Timer" type="Timer" parent="."]

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_yhpte")
}

[node name="AnimationPlayer2" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_yhpte")
}

[connection signal="gui_input" from="MouseChecker" to="." method="_on_control_gui_input"]
[connection signal="mouse_entered" from="MouseChecker" to="." method="_on_mouse_checker_mouse_entered"]
[connection signal="mouse_exited" from="MouseChecker" to="." method="_on_mouse_checker_mouse_exited"]
[connection signal="timeout" from="Timer" to="." method="_on_timer_timeout"]
[connection signal="animation_finished" from="AnimationPlayer" to="." method="_on_animation_player_animation_finished"]
[connection signal="animation_finished" from="AnimationPlayer2" to="." method="_on_animation_player_animation_finished"]
